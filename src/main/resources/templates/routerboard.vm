#set($v4Loopback=$station.loopback.inet4Address.hostAddress)
#set($v6Loopback=$station.loopback.inet6Address.hostAddress)

/system identity set name="Station $station.name"

/user set admin password="$password"

# all interfaces in routing mode
/interface ethernet
#foreach($interface in $networkInterfaces)
#if($interface.macAddress)
	set [ find mac-address=$interface.macAddress ] master-port=none speed=1Gbps name=$interface.ifName
#end
#end
/interface vlan
	remove numbers=[find]
#foreach($interface in $networkInterfaces)
#if($interface.parentIfName)
	add interface=$interface.parentIfName l2mtu=1594 name=$interface.ifName vlan-id=$interface.vlanId
#end
#end

/interface ipipv6
#	remove numbers=[find]
#foreach($interface in $tunnelEndpoints)
	add local-address=$v6Loopback mtu=1450 name=$interface.ifName remote-address=$interface.remoteAddress
#end


/interface bridge
	print
#	remove numbers=[find]
	add name=loopback auto-mac=no admin-mac=01:00:00:00:01:00
	
/interface pppoe-client
#foreach($pppoe in $pppoeClients)
	add add-default-route=yes dial-on-demand=yes disabled=no interface=$pppoe.ifName name=$pppoe.name password=$pppoe.password user=$pppoe.userName
#end

/ip address	
#	remove numbers=[find]
# Loopback IP
	add address=$v4Loopback/32 interface=loopback network=$v4Loopback
	
# configured IPs
#foreach($interface in $networkInterfaces)
#if($interface.v4Address)
	add address=$interface.v4Address/$interface.v4Mask interface=$interface.ifName
#end	
#end

# Tunnel Endpoints
#foreach($interface in $tunnelEndpoints)
	add address=$interface.v4Address/$interface.v4Mask interface=$interface.ifName
#end

# ipv4 ospf Routing
/routing ospf instance set [ find default=yes ] router-id=$v4Loopback

/routing ospf interface
	remove numbers=[find dynamic=no]
#foreach($interface in $tunnelEndpoints)
	add interface=$interface.ifName network-type=point-to-point
#end
#foreach($interface in $networkInterfaces)
#if($interface.v4Address)
	add interface=$interface.ifName passive=yes
#end	
#end

/routing ospf network
	remove numbers=[find dynamic=no]
	add area=backbone network=$v4Loopback/32
#foreach($interface in $networkInterfaces)
#if($interface.v4Address)
	add area=backbone network=$interface.v4NetAddress/$interface.v4Mask
#end	
#end
#foreach($interface in $tunnelEndpoints)
	add area=backbone network=$interface.v4NetAddress/$interface.v4Mask
#end


# ipv4 dhcp

/ip pool
	remove numbers=[find]
#foreach($interface in $networkInterfaces)
#if($interface.v4Address && $interface.dhcpRange)
	add name=${interface.ifName}_pool ranges=$interface.dhcpRange
#end	
#end	
/ip dhcp-server
	remove numbers=[find]
#foreach($interface in $networkInterfaces)
#if($interface.v4Address && $interface.dhcpRange)
	add address-pool=${interface.ifName}_pool disabled=no interface=${interface.ifName} lease-time=$interface.dhcpLeaseTime name=dhcp_${interface.ifName}
#end
#end	
/ip dhcp-server network	
	remove numbers=[find]
#foreach($interface in $networkInterfaces)
#if($interface.v4Address && $interface.dhcpRange)
	add address=$interface.v4NetAddress/$interface.v4Mask gateway=$interface.v4Address
#end	
#end

/ip dhcp-client
	remove numbers=[find]
#foreach($interface in $dhcpClientInterfaces)
	add default-route-distance=0 dhcp-options=hostname,clientid disabled=no interface=$interface
#end

# ipv4 firewall

/ip firewall filter
	remove numbers=[find]
#foreach($rule in $v4FilterRules)
	$rule.formatRule()
#end
/ip firewall nat
	remove numbers=[find]
#foreach($rule in $v4NatRules)
	$rule.formatRule()
#end

#### IPv6 ####

/ipv6 address
	remove numbers=[find]
# Loopback IP
	add address=$v6Loopback/128 interface=loopback advertise=no

# Connection IPs
#foreach($interface in $networkInterfaces)
#if($interface.v6Address)
	add address=$interface.v6Address/$interface.v6Mask interface=$interface.ifName
#end	
#end
 
# ospf-v3 Routing 
 
/routing ospf-v3 instance set [ find default=yes ] router-id=$v4Loopback
/routing ospf-v3 interface
	remove numbers=[find]
# Loopback
	add area=backbone interface=loopback passive=yes
	
# Physically Connections
#foreach($interface in $networkInterfaces)
#if($interface.v6Address)
#if($interface.role == "NETWORK")
	add area=backbone interface=$interface.ifName passive=yes
#else
	add area=backbone interface=$interface.ifName
#end
#end	
#end

/ipv6 nd
	remove numbers=[find default=no]
#set($first=1)
#foreach($interface in $networkInterfaces)
#if($interface.v6Address)
#if ($first==1)
	set [ find default=yes ] advertise-dns=yes interface=$interface.ifName
#set($first=0)
#else
	add interface=$interface.ifName advertise-dns=yes
#end
#end	
#end

# IPv6 Firewall
/ipv6 firewall filter
	remove numbers=[find]
#foreach($rule in $v6FilterRules)
	$rule.formatRule()
#end

/ip dns
set allow-remote-requests=yes servers=$dnsServers

/system reboot
